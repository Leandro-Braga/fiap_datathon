
import streamlit as st
from PIL import Image
from streamlit_extras.metric_cards import style_metric_cards

from backend.predict_passos import predict
from backend.processo_dados import (base_disciplina_aluno, carregar_dados,
                                    pegar_alunos, prepare_datos_predict)
from frontend import blocos_st, controlador

from . import graficos as graf

global data
global df_aluno
global df_disciplina


def setup():

    # -- imagens e logos -- #
    img = './documents/img/onibus-escolar2.png'
    img = Image.open(img)

    # --- Configura√ß√µes da p√°gina 'Geral' --- #
    st.set_page_config(
        page_title='An√°lise de Presen√ßa Escolar',
        page_icon=img,
        layout='wide',
        initial_sidebar_state='expanded',
        # initial_sidebar_state='collapsed',
        menu_items={
            'Get Help': 'https://www.google.com.br/',
            'Report a bug': "https://www.google.com.br/",
            'About': "Esse app foi desenvolvido pela Grupo 38 FIAP."
        }
    )


def style_card_metrica_ajustes():

    # Ajustes dos Cards e layout

    style_metric_cards(background_color='#232D3F', 
                       box_shadow=True, 
                       border_left_color='#EEEEEE', 
                       border_radius_px=10)


def prev(df_aluno, data):
    
    # Ordenar a lista de alunos
    lista_aluno = list(df_aluno.sort_values("nome_id_aluno")["nome_id_aluno"])

    with st.form("my_form"):
        aluno = st.selectbox("Selecione o Aluno", lista_aluno)

        if st.form_submit_button("Prever"):
            # Filtrar pelo aluno selecionado
            df_aluno_filtered = df_aluno[df_aluno["nome_id_aluno"] == aluno]
            id_aluno = df_aluno_filtered["id_aluno"].iloc[0]

            c1, c2 = st.columns([2, 1])

            # Preparar os dados e fazer a previs√£o
            resp = prepare_datos_predict(data, id_aluno)


            # st.dataframe(resp)


            proba = predict(resp)

            # Exibir as informa√ß√µes do aluno
            with c1:
                st.markdown("##### Aluno Selecionado")
                st.markdown(
                    f"""
                    <p style=''>ID: {df_aluno_filtered['id_aluno'].iloc[0]}</p>
                    <p style='margin-top: -15px'>Nome: {df_aluno_filtered['nome_aluno'].iloc[0]}</p>
                    <p style='margin-top: -15px'>Data Nascimento: {df_aluno_filtered['data_nascimento_aluno'].iloc[0]}</p>
                    <p style='margin-top: -15px'>Sexo: {('Masculino' if df_aluno_filtered['sexo_aluno'].iloc[0] == 1 else 'Feminino')}</p>
                    """,
                    unsafe_allow_html=True,
                )

            # Exibir a probabilidade de comparecimento
            with c2:
                st.markdown(
                    "<div style='margin-bottom: 40px'></div>", unsafe_allow_html=True
                )
                st.metric(
                    label="Probabilidade de comparecer", value=f"{proba[1]*100:.1f}%"
                )
                style_card_metrica_ajustes() # <-- Chama os ajustes do card
            
            # Exibir o gr√°fico de faltas do aluno
            graf.graph_faltas_aluno(data[data["id_aluno"] == id_aluno])


def init_session_state():

    # # Defina as p√°ginas
    pages = {
        "Introdu√ß√£o": "introducao",
        "An√°lise Explorat√≥ria": "analise_exploratoria",
        "Modelos de Previs√£o": "modelos_previsao",
    }

    # Adicione a navega√ß√£o na sidebar
    st.sidebar.title("Navega√ß√£o")
    selection = st.sidebar.radio("Ir para", list(pages.keys()))

    cor_titulo = '#00ABB3' 
    cor_texto = '#C7C8CC'
    tamanho_texto = '16px'


    data = carregar_dados()
    df_aluno = pegar_alunos()
    df_disciplina = base_disciplina_aluno()

    img_page = './documents/img/Passos-magicos-icon-cor.png'
    img_page = Image.open(img_page)

    if selection == "Introdu√ß√£o":

        st.markdown(f'<h1 style="text-align: left; color: {cor_titulo}; font-size: 40px;">{selection} | DATATHON</h1>', unsafe_allow_html=True)

        st.subheader("", divider="gray")
        # blue, green, orange, red, violet, gray, grey, rainbow.
        
        st.markdown(f'<h1 style="text-align: left; color: {cor_titulo}; font-size: 40px;">Objetivo</h1>', unsafe_allow_html=True)

        st.markdown(f"""<h1 style="text-align: left; color: {cor_texto}; font-size: {tamanho_texto};">
        Este projeto tem como objetivo desenvolver uma an√°lise da presen√ßa de alunos em aulas e gerar insight para a√ß√£o da ONG Passos M√°gicos. A an√°lise √© baseada no hist√≥rico de frequ√™ncia registrado no di√°rio de classe, al√©m de outras informa√ß√µes relevantes sobre as aulas e os estudantes.<br><br>
        Para garantir uma vis√£o abrangente e robusta, foram utilizados dados de bases distintas, incluindo informa√ß√µes sobre o cadastro de alunos, professores, turmas e disciplinas. 
        """, unsafe_allow_html=True)
    
        st.subheader("", divider="gray")
        
        st.markdown(f'<h1 style="text-align: left; color: {cor_titulo}; font-size: 40px;">ONG (Passos M√°gicos)</h1>', unsafe_allow_html=True)
        
        col01, col02 = st.columns(2)

        with col01:
            st.image(img_page, width=250)
        
        with col02:
            st.markdown(""" 
                A Associa√ß√£o Passos M√°gicos tem uma trajet√≥ria de 30 anos de atua√ß√£o, trabalhando na transforma√ß√£o da vida de crian√ßas e jovens de baixa renda os levando a melhores oportunidades de vida.
                
                A associa√ß√£o busca instrumentalizar o uso da educa√ß√£o como ferramenta para a mudan√ßa das condi√ß√µes de vida das crian√ßas e jovens em vulnerabilidade social. 
                        """)
        st.markdown(""" 
            ### Base de dados

            As bases de dados cont√©m informa√ß√µes educacionais e socioecon√¥micas dos estudantes da Passos M√°gicos.
            Al√©m da base de dados, alguns relat√≥rios de pesquisa realizada pela Passos M√°gicos tamb√©m foram disponibilizados para auxiliar no conhecimento do neg√≥cio.

            Para mais detalhes, acessar o site oficial da Passos M√°gicos: [Passos M√°gicos Quem Somos](https://passosmagicos.org.br/quem-somos/) | [Passos M√°gicos home](https://passosmagicos.org.br)
                    """)


    elif selection == "An√°lise Explorat√≥ria":

        st.markdown(f'<h1 style="text-align: left; color: {cor_titulo}; font-size: 40px;">{selection}</h1>', unsafe_allow_html=True)
        
        st.subheader("", divider="gray")

        tab1, tab2, tab3, tab4, tab5, tab6 = st.tabs(['üìí An√°lise de Presen√ßa', 
                                                'üåç An√°lise Demogr√°fica dos Alunos', 
                                                'üöª Distribui√ß√£o por G√™nero',
                                                'üåì Distribui√ß√£o por Ra√ßa/Cor',
                                                'üë®‚Äçüë®‚Äçüë¶ Correla√ß√£o entre Pais e Presen√ßa',
                                                'üìö Disciplina e Presen√ßa']
                                                )
 
        with tab1:
            col1, col2 = st.columns(2)

            with col1:
                controlador.texto_tab1_col1()

            with col2:
                graf.graph_presenca_aluno(data)
                    
            st.subheader("", divider="gray")

            texto_titulo_base = 'Gr√°fico da taxa de presen√ßa por dia da semana'

            st.markdown(f'<h1 style="text-align: left; color: {cor_texto}; font-size: 18px;">{texto_titulo_base}:</h1>', unsafe_allow_html=True)


            var_presente = st.radio("**Selecione:**", 
                    options=['Presen√ßa', 'Faltas'], 
                    key='presente')

            graf.graph_frequencia_aluno_semanal(data, var_presente)

            if var_presente == 'Presen√ßa':
                controlador.texto_tab1_presente()

            elif var_presente == 'Faltas':
                controlador.texto_tab1_falta()
               

        with tab2:

            st.markdown("""
            ### Distribui√ß√£o de Idade dos Alunos

            - Qual a faixa et√°ria predominante dos alunos? 
            - Existe uma correla√ß√£o entre idade e presen√ßa nas aulas?""")

            df_alunos = data.drop_duplicates(subset=['id_aluno'], keep='first')

            st.write(df_alunos[['idade_aluno']].describe().T)

            graf.graph_distribuicao(data)

            controlador.texto_analise_distribuicao_idade()

            var_presente = st.radio("**Selecione:**", 
            options=['Presen√ßa', 'Faltas'], 
            key='presente_2')

            graf.graph_frequencia_aluno_idade(data, var_presente)

            controlador.texto_analise_correlacao_idade()


        with tab3:

            col3, col4 = st.columns(2)
            with col3:
                controlador.texto_distribuicao_sexo()

            with col4:
                graf.graph_distribuicao_sexo(data)

            graf.graph_porcentagem_presenca_genero(data)

            controlador.texto_analise_genero()


        with tab4:
            
            controlador.texto_distribuicao_raca_cor()
            
            graf.graph_presenca_raca_cor(data)

            controlador.texto_analise_raca_cor()

            graf.graph_porcento_presenca_raca_cor(data)

            controlador.texto_analise_raca_presenca()


        with tab5:
            
            controlador.texto_correlacao_pais_presenca()

            graf.graph_presenca_pais(data)

            controlador.texto_analise_pais_presenca()

            st.divider()

            controlador.texto_cabecalho_analise_pais_presenca()

            graf.graph_presenca_pais_mae(data)

            controlador.texto_analise_pais_presenca_mae()


        with tab6:
            
            controlador.texto_titulo_disciplina_presenca()

            graf.graph_disciplina_presenca(data, df_disciplina)

            controlador.texto_analise_disciplina_presenca()


    elif selection == "Modelos de Previs√£o":

        st.markdown(f'<h1 style="text-align: left; color: {cor_titulo}; font-size: 40px;">{selection}</h1>', unsafe_allow_html=True)

        st.subheader("", divider="gray")
           
        controlador.texto_modelo_avaliacao()

        st.latex(r"\text{Prediction} = \frac{1}{n_{\text{trees}}} \sum_{i=1}^{n_{\text{trees}}} \text{Tree}_i(\text{input})")


        blocos_st.prev(df_aluno, data)
            
    st.markdown("""
    <style>
        [data-testid=stSidebar] {background-color: #304463;}
    </style> """, unsafe_allow_html=True)

    with st.sidebar:
        
        st.divider()

        st.subheader("Alunos do Grupo 38:")
        st.write("**Leandro Braga Alves** <br> RM :orange[353057] | 3DTAT", unsafe_allow_html=True)
        st.write("**Rodrigo Mitsuo Yoshida** <br> RM :orange[35274] | 3DTAT", unsafe_allow_html=True)
        st.write("**Roberto Yukio Ihara** <br> RM :orange[35274] | 3DTAT", unsafe_allow_html=True)


        st.divider()



